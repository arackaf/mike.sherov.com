{"version":3,"sources":["webpack:///./src/pages/blog.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/components/layout.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/components/seo.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["Blog","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_0___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_1__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","__webpack_require__","d","__webpack_exports__","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1__","typography_theme_wordpress_2016__WEBPACK_IMPORTED_MODULE_1___default","Wordpress2016","overrideThemeStyles","a.gatsby-resp-image-link","googleFonts","typography","Typography","m","module","exports","require","default","Layout","_this$props","children","navLinkStyles","textDecoration","color","flexStyles","display","justifyContent","alignItems","headerStyles","Object","assign","subnavLinkStyles","paddingLeft","pageHeader","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_2__","marginLeft","marginRight","maxWidth","padding","Date","getFullYear","react__WEBPACK_IMPORTED_MODULE_0__","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","createContext","PropTypes","object","string","isRequired","func","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","name","content","property","author","concat","defaultProps","propTypes","arrayOf","ProdPageRenderer","pageResources","InternalPageRenderer","json","shape","pathname"],"mappings":"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","file":"component---src-pages-blog-js-8bb107aa76e504be0e63.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass Blog extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"All posts\" />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default Blog\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","import Typography from \"typography\"\nimport Wordpress2016 from \"typography-theme-wordpress-2016\"\n\nWordpress2016.overrideThemeStyles = () => {\n  return {\n    \"a.gatsby-resp-image-link\": {\n      boxShadow: `none`,\n    },\n  }\n}\n\ndelete Wordpress2016.googleFonts\n\nconst typography = new Typography(Wordpress2016)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nclass Layout extends React.Component {\n  render() {\n    const { children, title } = this.props\n    const navLinkStyles = {\n      boxShadow: `none`,\n      textDecoration: `none`,\n      color: `inherit`,\n    }\n    const flexStyles = {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n    }\n    const headerStyles = {\n      ...flexStyles,\n      marginBottom: rhythm(2),\n    }\n    const subnavLinkStyles = {\n      ...navLinkStyles,\n      paddingLeft: rhythm(1 / 2),\n    }\n    const pageHeader = (\n      <header style={headerStyles}>\n        <strong>\n          <Link style={navLinkStyles} to={`/`}>\n            {title}\n          </Link>\n        </strong>\n        <nav style={flexStyles}>\n          <Link style={subnavLinkStyles} to={`/about`}>\n            About\n          </Link>\n          <Link style={subnavLinkStyles} to={`/blog`}>\n            Posts\n          </Link>\n        </nav>\n      </header>\n    )\n\n    return (\n      <div\n        style={{\n          marginLeft: `auto`,\n          marginRight: `auto`,\n          maxWidth: rhythm(24),\n          padding: `${rhythm(1.5)} ${rhythm(3 / 4)}`,\n        }}\n      >\n        {pageHeader}\n        <main>{children}</main>\n        <footer>Â© {new Date().getFullYear()}, Mike Sherov</footer>\n      </div>\n    )\n  }\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}